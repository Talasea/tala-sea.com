<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TALA-SEA App-Hub</title>
  <style>
    :root {
      --matrix-green: #00ff41;
      --matrix-dark: #0d0208;
      --matrix-light: #003b00;
    }

    body, html {
      margin: 0;
      padding: 0;
      font-family: 'Courier New', monospace;
      background-color: var(--matrix-dark);
      color: var(--matrix-green);
      height: 100%;
      overflow: hidden; /* Verhindert Scrollbalken auf Body-Ebene */
    }

    .matrix-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      opacity: 0.2;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
      z-index: 1;
      position: relative;
      height: 100vh; /* Volle H√∂he des Viewports */
      overflow-y: auto; /* Erm√∂glicht Scrollen nur im Container */
      box-sizing: border-box; /* Padding wird in die H√∂he einberechnet */
    }

    header {
      text-align: center;
      padding: 2rem 0;
      border-bottom: 1px solid var(--matrix-green);
      margin-bottom: 2rem;
      position: relative;
    }

    h1 {
      font-size: 3.5rem;
      margin: 0;
      letter-spacing: 0.5rem;
      text-shadow: 0 0 10px var(--matrix-green);
    }

    .subtitle {
      font-size: 1.2rem;
      margin-top: 1rem;
      letter-spacing: 0.2rem;
    }

    .home-button {
      position: absolute;
      left: 20px;
      top: 50%;
      transform: translateY(-50%);
      text-decoration: none;
      transition: all 0.3s ease;
    }

    .rabbit {
      font-size: 2.5rem;
      color: white;
      filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.7));
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .rabbit:hover {
      transform: scale(1.1);
      filter: drop-shadow(0 0 15px rgba(255, 255, 255, 0.9));
    }

    .rabbit-label {
      font-size: 0.7rem;
      color: var(--matrix-green);
      margin-top: 0.3rem;
    }

    .apps-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 2rem;
      margin-top: 3rem;
    }

    .app-card {
      background-color: rgba(0, 20, 0, 0.7);
      border: 1px solid var(--matrix-green);
      border-radius: 5px;
      padding: 1.5rem;
      transition: all 0.3s ease;
      display: flex;
      flex-direction: column;
      height: 100%; /* Stellt sicher, dass Karten gleich hoch sind, wenn m√∂glich */
      box-sizing: border-box; /* Padding wird in die H√∂he einberechnet */
    }

    .app-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 0 25px rgba(0, 255, 65, 0.5);
    }

    .app-card h3 {
      margin-top: 0;
      font-size: 1.5rem;
      border-bottom: 1px solid var(--matrix-green);
      padding-bottom: 0.5rem;
      margin-bottom: 1rem; /* Abstand nach der √úberschrift */
    }

    .app-card p {
      flex-grow: 1; /* L√§sst den Textbereich wachsen */
      margin-bottom: 1.5rem;
    }

    .app-card .tags {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-bottom: 1rem;
    }

    .tag {
      background-color: var(--matrix-light);
      color: var(--matrix-green);
      padding: 0.3rem 0.6rem;
      border-radius: 3px;
      font-size: 0.8rem;
      border: 1px solid var(--matrix-green);
    }

    .button {
      display: inline-block;
      background-color: var(--matrix-light);
      color: var(--matrix-green);
      padding: 0.8rem 1.5rem;
      border: 1px solid var(--matrix-green);
      border-radius: 3px;
      text-decoration: none;
      text-align: center;
      transition: all 0.3s ease;
      cursor: pointer;
      margin-top: auto; /* Schiebt den Button nach unten */
    }

    .button:hover {
      background-color: var(--matrix-green);
      color: var(--matrix-dark);
      box-shadow: 0 0 15px var(--matrix-green);
    }

    .section-title {
      text-align: center;
      font-size: 2rem;
      margin-bottom: 2rem;
      text-shadow: 0 0 8px var(--matrix-green);
    }

    .search-container {
      margin: 2rem auto;
      max-width: 600px;
      display: flex;
    }

    .search-input {
      flex: 1;
      background-color: rgba(0, 20, 0, 0.7);
      border: 1px solid var(--matrix-green);
      color: var(--matrix-green);
      padding: 0.8rem;
      font-family: 'Courier New', monospace;
      font-size: 1rem;
      border-radius: 3px 0 0 3px; /* Abrundung links */
    }

    .search-input:focus {
      outline: none;
      box-shadow: 0 0 15px rgba(0, 255, 65, 0.5);
    }

    .search-button {
      background-color: var(--matrix-light);
      color: var(--matrix-green);
      border: 1px solid var(--matrix-green);
      border-left: none;
      padding: 0 1rem;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 1.2rem; /* Gr√∂√üe des Icons */
      border-radius: 0 3px 3px 0; /* Abrundung rechts */
    }

    .search-button:hover {
      background-color: var(--matrix-green);
      color: var(--matrix-dark);
    }

    footer {
      text-align: center;
      margin-top: 3rem;
      padding: 1rem 0;
      border-top: 1px solid var(--matrix-green);
      font-size: 0.9rem;
    }

    @media (max-width: 768px) {
      h1 {
        font-size: 2.2rem;
        letter-spacing: 0.3rem; /* Angepasst f√ºr kleinere Bildschirme */
      }

      .home-button {
        position: relative; /* Relative Position im Flow */
        display: block; /* Als Block anzeigen */
        left: auto; /* Auto-Positionierung */
        top: auto;
        transform: none; /* Keine Transformation */
        margin: 0 auto 1.5rem auto; /* Zentriert und mit Abstand nach unten */
        width: fit-content; /* Breite an Inhalt anpassen */
      }

      header {
        padding-top: 1rem; /* Weniger Padding oben */
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      .rabbit {
        font-size: 2rem;
      }

      .apps-grid {
        grid-template-columns: 1fr; /* Eine Spalte auf kleinen Bildschirmen */
      }

      .container {
        padding: 1rem; /* Weniger Padding auf kleinen Bildschirmen */
      }
    }
  </style>
</head>
<body>
<canvas class="matrix-bg" id="matrixCanvas"></canvas>

<div class="container">
  <header>
    <a href="index.html" class="home-button">
      <div class="rabbit">üêá
        <span class="rabbit-label">ZUR√úCK</span>
      </div>
    </a>
    <h1>TALA-SEA APP-HUB</h1>
    <div class="subtitle">[ ANWENDUNGEN & TOOLS ]</div>
  </header>

  <div class="search-container">
    <input type="text" class="search-input" placeholder="Suche nach Anwendungen...">
    <button class="search-button">üîç</button>
  </div>

  <h2 class="section-title">VERF√úGBARE ANWENDUNGEN</h2>

  <div class="apps-grid">
    <div class="app-card">
      <h3>BSI-Grundschutz Quiz</h3>
      <div class="tags">
        <span class="tag">Sicherheit</span>
        <span class="tag">Bildung</span>
        <span class="tag">Quiz</span>
      </div>
      <p>Teste dein Wissen zum BSI-Grundschutz mit diesem interaktiven Quiz. Lerne die wichtigsten Konzepte und bereite dich auf Zertifizierungen vor.</p>
      <a href="apps/Bsi-grundschutz-quiz/index.html" class="button">Quiz starten</a> </div>

    <div class="app-card">
      <h3>IT-Sicherheits Quiz</h3>
      <div class="tags">
        <span class="tag">Sicherheit</span>
        <span class="tag">Bildung</span>
        <span class="tag">Quiz</span>
      </div>
      <p>Teste dein Wissen im Bereich IT-Sicherheit. Decke verschiedene Themen ab und pr√ºfe deine Kenntnisse.</p>
      <a href="apps/IT-Sicherheitsb-Quiz/index.html" class="button">Quiz starten</a>
    </div>

    <div class="app-card">
      <h3>Netzwerk Quiz</h3>
      <div class="tags">
        <span class="tag">Netzwerk</span>
        <span class="tag">Bildung</span>
        <span class="tag">Quiz</span>
      </div>
      <p>Wie gut kennst du dich mit Netzwerken aus? Dieses Quiz pr√ºft dein Verst√§ndnis von Protokollen, Topologien und mehr.</p>
      <a href="apps/NetzwerkQuiz/index.html" class="button">Quiz starten</a>
    </div>

    <div class="app-card">
      <h3>PC Quiz</h3>
      <div class="tags">
        <span class="tag">Hardware</span>
        <span class="tag">Software</span>
        <span class="tag">Bildung</span>
        <span class="tag">Quiz</span>
      </div>
      <p>Teste dein Wissen √ºber PC-Komponenten, Betriebssysteme und allgemeine Computertechnik.</p>
      <a href="apps/PcQuiz/index.html" class="button">Quiz starten</a>
    </div>
    <div class="app-card">
      <h3>Passwort-Generator</h3>
      <div class="tags">
        <span class="tag">Sicherheit</span>
        <span class="tag">Tool</span>
      </div>
      <p>Erzeuge sichere Passw√∂rter nach modernsten Standards. Du kannst Komplexit√§t, L√§nge und verwendete Zeichens√§tze anpassen.</p>
      <a href="#" class="button">Demn√§chst verf√ºgbar</a>
    </div>

    <div class="app-card">
      <h3>Sicherheits-Scanner</h3>
      <div class="tags">
        <span class="tag">Netzwerk</span>
        <span class="tag">Analyse</span>
      </div>
      <p>Scanne deine Netzwerkumgebung auf potentielle Schwachstellen und erhalte ma√ügeschneiderte Empfehlungen zur Absicherung.</p>
      <a href="#" class="button">Demn√§chst verf√ºgbar</a>
    </div>

    <div class="app-card">
      <h3>DSGVO-Checker</h3>
      <div class="tags">
        <span class="tag">Compliance</span>
        <span class="tag">Recht</span>
      </div>
      <p>√úberpr√ºfe die DSGVO-Konformit√§t deiner Projekte und erhalte Hinweise zur Verbesserung des Datenschutzes.</p>
      <a href="#" class="button">Demn√§chst verf√ºgbar</a>
    </div>

    <div class="app-card">
      <h3>Kryptografie-Trainer</h3>
      <div class="tags">
        <span class="tag">Bildung</span>
        <span class="tag">√úbung</span>
      </div>
      <p>Lerne Grundlagen der Kryptografie und √ºbe deren Anwendung in praktischen Szenarien.</p>
      <a href="#" class="button">Demn√§chst verf√ºgbar</a>
    </div>

    <div class="app-card">
      <h3>Vorschlagen</h3>
      <div class="tags">
        <span class="tag">Feedback</span>
      </div>
      <p>Du hast eine Idee f√ºr eine neue Anwendung oder ein Tool? Teile sie mit uns, und vielleicht wird sie Teil des App-Hubs!</p>
      <a href="#" class="button">Idee einreichen</a>
    </div>
  </div>
  <footer>
    &copy; 2025 TALA-SEA Project | Alle Rechte vorbehalten
  </footer>
</div>

<script>
  // Matrix rain effect
  const canvas = document.getElementById('matrixCanvas');
  const ctx = canvas.getContext('2d');

  // Funktion zum Setzen der Canvas-Gr√∂√üe
  function resizeCanvas() {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    // Neuberechnung der Spalten bei Gr√∂√üen√§nderung kann sinnvoll sein,
    // hier aber einfach gehalten, um Performance zu schonen.
    // Neuzeichnen ist aber wichtig.
  }

  // Set canvas size initially and on resize
  window.addEventListener('resize', resizeCanvas);
  resizeCanvas(); // Initial call

  // Characters to display
  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$+-*/=%"\'#&_();:,.<>[]{}|';
  const katakana = '„Ç¢„Ç°„Ç´„Çµ„Çø„Éä„Éè„Éû„É§„É£„É©„ÉØ„Ç¨„Ç∂„ÉÄ„Éê„Éë„Ç§„Ç£„Ç≠„Ç∑„ÉÅ„Éã„Éí„Éü„É™„É∞„ÇÆ„Ç∏„ÉÇ„Éì„Éî„Ç¶„Ç•„ÇØ„Çπ„ÉÑ„Éå„Éï„É†„É¶„É•„É´„Ç∞„Ç∫„Éñ„ÉÖ„Éó„Ç®„Çß„Ç±„Çª„ÉÜ„Éç„Éò„É°„É¨„É±„Ç≤„Çº„Éá„Éô„Éö„Ç™„Ç©„Ç≥„ÇΩ„Éà„Éé„Éõ„É¢„É®„Éß„É≠„É≤„Ç¥„Çæ„Éâ„Éú„Éù„É¥„ÉÉ„É≥';
  const matrixChars = characters + katakana; // Combine character sets

  // Font size and columns
  const fontSize = 14;
  const columns = Math.floor(canvas.width / fontSize);

  // Array to track y position of each column
  const drops = [];
  for (let i = 0; i < columns; i++) {
    // Start drops at random heights, including off-screen negative values
    drops[i] = 1 - Math.floor(Math.random() * (canvas.height / fontSize));
  }

  // Draw matrix rain effect
  function draw() {
    // Semi-transparent black to create fade effect
    // Use matrix-dark for background fade if needed, but rgba is common
    ctx.fillStyle = 'rgba(0, 2, 8, 0.05)'; // Original fade effect
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    ctx.fillStyle = '#00ff41'; // Matrix green color
    ctx.font = `${fontSize}px monospace`;

    for (let i = 0; i < drops.length; i++) {
      // Random character from combined set
      const text = matrixChars.charAt(Math.floor(Math.random() * matrixChars.length));

      // Calculate position
      const xPos = i * fontSize;
      const yPos = drops[i] * fontSize;

      // Draw character only if it's within the canvas height
      if (yPos > 0 && yPos < canvas.height) {
        ctx.fillText(text, xPos, yPos);
      }

      // Move drops down or reset
      // Reset condition: If drop goes below canvas and a random chance occurs
      if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {
        drops[i] = 0; // Reset to top
      }

      drops[i]++; // Move drop down for the next frame
    }
  }


  // Simple search functionality
  const searchInput = document.querySelector('.search-input');
  const searchButton = document.querySelector('.search-button');
  const appCards = document.querySelectorAll('.app-card');
  const appsGrid = document.querySelector('.apps-grid'); // Referenz zum Grid-Container

  function performSearch() {
    const searchTerm = searchInput.value.toLowerCase().trim(); // Trim whitespace
    let visibleCount = 0; // Z√§hler f√ºr sichtbare Karten

    appCards.forEach(card => {
      const title = card.querySelector('h3').textContent.toLowerCase();
      const description = card.querySelector('p').textContent.toLowerCase();
      const tags = Array.from(card.querySelectorAll('.tag')).map(tag => tag.textContent.toLowerCase());

      // Check if the search term is present in title, description, or any tag
      const isMatch = searchTerm === '' || // Show all if search is empty
              title.includes(searchTerm) ||
              description.includes(searchTerm) ||
              tags.some(tag => tag.includes(searchTerm));

      // Show or hide the card based on match
      // Using 'flex' because the .app-card display is set to flex
      card.style.display = isMatch ? 'flex' : 'none';
      if (isMatch) {
        visibleCount++; // Increment counter if card is visible
      }
    });

    // Optional: Feedback wenn keine Ergebnisse gefunden wurden
    // Man k√∂nnte hier eine Nachricht im appsGrid anzeigen, wenn visibleCount = 0 ist.
    // Implementierung h√§ngt vom gew√ºnschten UI-Verhalten ab.
  }

  // Event listeners for search
  searchButton.addEventListener('click', performSearch);
  searchInput.addEventListener('keypress', (e) => {
    // Trigger search on Enter key press
    if (e.key === 'Enter') {
      performSearch();
    }
  });
  // Optional: Real-time search as the user types
  // searchInput.addEventListener('input', performSearch);


  // Run animation using requestAnimationFrame for smoother performance
  let lastTime = 0;
  const fps = 30; // Target frames per second
  const interval = 1000 / fps; // Time interval between frames in ms

  function animate(timestamp) {
    const deltaTime = timestamp - lastTime;

    // Limit frame rate
    if(deltaTime > interval) {
      draw(); // Call the draw function
      lastTime = timestamp - (deltaTime % interval); // Adjust lastTime
    }

    requestAnimationFrame(animate); // Request the next frame
  }

  // Start the animation loop
  requestAnimationFrame(animate);

</script>
</body>
</html>