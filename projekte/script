document.addEventListener("DOMContentLoaded", function () {
    // Debug-Modus für bessere Fehlerdiagnose
    const DEBUG = true;
    function debug(message) {
        if (DEBUG) console.log(`[DEBUG] ${message}`);
    }

    debug("DOM geladen, Initialisierung beginnt...");

    // Array mit den Fragen und Antworten
    const questions = [
        {
            id: "A13b",
            question: "Was ist beim Anfertigen eines Backups zu beachten?",
            answers: [
                {
                    text: "Grober Sicherheitsverstoß, wenn keines gemacht wird",
                    correct: true
                },
                { text: "Backup-Recovery-Übungen sind durchzuführen", correct: true },
                {
                    text:
                        "Verschlüsseln, um die Daten vor dem Zugriff dritter zu schützen",
                    correct: true
                },
                {
                    text: "Aufbewahrung an einem anderen Ort/Brandschutzsektor",
                    correct: true
                }
            ],
            category: "Backup"
        },
        {
            id: "A25c",
            question:
                "Was ist in Bezug auf Zugänge in einer Organisation zu beachten?",
            answers: [
                {
                    text:
                        "Bei Beendigung der Beschäftigung sollen die Zugangsrechte wieder entzogen werden",
                    correct: true
                },
                {
                    text: "Benutzerzugangsrechte sollen regelmäßig überprüft werden",
                    correct: true
                },
                {
                    text: "Für die Zugangsteuerung sollte es eine Richtlinie geben",
                    correct: true
                }
            ],
            category: "Zugang und Zugriff"
        },
        {
            id: "A03f",
            question: "Was ist die Aufgabe einer Firewall?",
            answers: [
                { text: "Programme aktualisieren", correct: false },
                {
                    text:
                        "Alle Daten kontrollieren, die in das eigene Netzwerk hineinkommen oder es verlassen",
                    correct: true
                },
                { text: "Vor Spam-Mail schützen", correct: false }
            ],
            category: "Netzwerksicherheit"
        },
        {
            id: "A26j",
            question:
                "Welcher der vier Standards des BSI beschäftigt sich mit dem Notfallmanagement?",
            answers: [
                { text: "BSI Risikoanalyse (200-3)", correct: false },
                { text: "BSI Notfallmanagement (100-4)", correct: true },
                { text: "BSI ISMS (200-1)", correct: false },
                { text: "BSI Vorgehen (200-2)", correct: false }
            ],
            category: "Notfallmanagement"
        },
        {
            id: "A05f",
            question: "Wie kann eine Risikobehandlung durchgeführt werden?",
            answers: [
                { text: "Risiko minimieren", correct: true },
                { text: "Risiko transferieren", correct: true },
                { text: "Risiko reduzieren", correct: true },
                { text: "Risiko akzeptieren", correct: true }
            ],
            category: "Risikomanagement"
        },
        {
            id: "A20d",
            question:
                "Wodurch können Informationssicherheitsvorfälle hervorgerufen bzw. begünstigt werden?",
            answers: [
                { text: "Ungesteuerte Systemänderungen", correct: true },
                {
                    text: "Äußere Einwirkungen wie z.B. Wetterereignisse",
                    correct: true
                },
                { text: "Verstöße gegen Sicherheitsvorschriften", correct: true },
                { text: "Fehlfunktionen von Systemen", correct: true }
            ],
            category: "Informationssicherheit"
        },
        {
            id: "A26i",
            question: "Für was steht die Abkürzung BCM?",
            answers: [
                { text: "business continiuous management", correct: false },
                { text: "busy continiuty management", correct: false },
                { text: "Business Continuity Management", correct: true }
            ],
            category: "Business Continuity"
        },
        {
            id: "A26a",
            question:
                "Welche sind Bereiche, die eine besondere Aufmerksamkeit in Bezug auf Zugang und Zugriff benötigen?",
            answers: [
                { text: "Geschäfsführer", correct: false },
                {
                    text: "Privilegierte Benutzer, wie Tool, Systtemadministratoren",
                    correct: true
                },
                {
                    text:
                        "Bereiche, wo Werkzeuge mit privilegierten Rechten zum Einsatz kommen (Datenbanktools, Netzwerk-Sniffer, …)",
                    correct: true
                },
                { text: "Abteilungschef", correct: false }
            ],
            category: "Zugang und Zugriff"
        },
        {
            id: "A06c",
            question: "Wen umfasst das BSI-Gesetz zu den kritischen Infrastukturen?",
            answers: [
                {
                    text:
                        "Alle Unternehmen der im Gesetz aufgeführten Sektoren (Ernährung, Wasser, Energie, Transport und Verkehr, Gesundheit, Finanz und Versicherungswesen, Information und Telekommunikation), die die in der jeweiligen Rechtsverordnung genannten Schwellenwerte überschreiten.",
                    correct: true
                },
                { text: "alle Unternehmen", correct: false }
            ],
            category: "Gesetzliche Grundlagen"
        },
        {
            id: "A07f",
            question:
                "Ein Code oder Stück Software gewährt Zugriff auf ein System. Wie nennt man das?",
            answers: [
                { text: "Backdoor", correct: true },
                { text: "Social Engineering", correct: false },
                { text: "logic bomb", correct: false },
                { text: "Betriebssystem", correct: false }
            ],
            category: "Angriffsmethoden"
        },
        {
            id: "A26c",
            question: "Wie lange ist eine ISO 27001 Zertifizierung gültig?",
            answers: [
                { text: "3 Jahre", correct: true },
                { text: "sie gilt solange das Unternehmen existiert", correct: false },
                {
                    text:
                        "solange 2x Überwachungsaudit im 3-Jahreszeitraum (jährlich 1x) erfolgen",
                    correct: false
                }
            ],
            category: "Zertifizierung"
        },
        {
            id: "A07d",
            question:
                "Muss eine SOA (Statement of Applicability) bei der ISMS-Einführung erstellt werden?",
            answers: [
                {
                    text: "Wenn nach BSI Grundschutz zertifiziert wurde 200-2 etc.",
                    correct: false
                },
                { text: "unbedingt", correct: true },
                { text: "Nur wenn du 27001 konform sein willst", correct: false }
            ],
            category: "ISMS"
        },
        {
            id: "A25h",
            question: "Was sollten dokumentierte Bedienabläufe enthalten?",
            answers: [
                { text: "Dokumentation des gesamten ISMS", correct: false },
                { text: "Dokumentation der ISO 27001", correct: false },
                {
                    text:
                        "Die Dokumentation sollte Informationen zur Durchführung von Systemneustarts enthalten",
                    correct: true
                },
                {
                    text:
                        "Die Dokumentation sollte Informationen zur Durchführung von Backups enthalten",
                    correct: true
                }
            ],
            category: "Dokumentation"
        },
        {
            id: "A14f",
            question:
                "Was betrachtet die Informationssicherheit außer technische IT-Sicherheit?",
            answers: [
                {
                    text:
                        "Grundsätzlich alle Informationen im Unternehmen, unabhängig des Speichermediums",
                    correct: true
                },
                { text: "Information in den Köpfen der Mitarbeiter", correct: false },
                {
                    text: "Informationen, welche in IT-Systemen gespeichert sind",
                    correct: false
                }
            ],
            category: "Informationssicherheit"
        },
        {
            id: "A20c",
            question:
                "Unter welchen Umständen kann eine Organisation Anforderungen aus dem Kapitel 4 der ISO-27001 für nicht anwendbar erklären?",
            answers: [
                {
                    text: "man kann über die SOA gewisse Teile ausschließen",
                    correct: false
                },
                {
                    text: "wenn nach BSI Grundschutz zertifiziert wurde 200-2 etc.",
                    correct: false
                },
                {
                    text:
                        "Unter keinen Umständen (wenn eine Organisation Konformität mit dieser internationalen Norm für sich beansprucht, darf sie keine der Anforderungen in den Abschnitten 4 bis 10 ausschließen.)",
                    correct: true
                },
                { text: "nur wenn du nicht 27001 konform sein willst", correct: false }
            ],
            category: "ISO 27001"
        },
        {
            id: "A07i",
            question: "Was ist die Aufgabe des Notfallmanagements nach BSI 100-4",
            answers: [
                {
                    text:
                        "Der BSI-Standart 100-4 stellt einen systematischen Weg auf, ein Notfallmanagement in deiner Behörde oder in einem Unternehmen aufzubauen, um die Kontinuität des Geschäftsbetriebs sicherzustellen",
                    correct: true
                },
                { text: "BCM business continuity management", correct: false }
            ],
            category: "Notfallmanagement"
        },
        {
            id: "A03j",
            question: "Welche Aussagen sind in Bezug auf den Datenschutz zu machen?",
            answers: [
                {
                    text:
                        "Daten dürfen nur unter Berücksichtigung der gesetzlichen Vorgaben verarbeitet werden",
                    correct: true
                },
                {
                    text:
                        "Einwilligung zur Datenverarbeitung können nachträglich widerrufen werden",
                    correct: true
                },
                {
                    text:
                        "Nutzer können die Berichtigung bzw. Löschung ihrer Daten beantragen",
                    correct: true
                },
                {
                    text: "Daten dürfen zwischen Unternehmen ausgetauscht werden",
                    correct: false
                }
            ],
            category: "Datenschutz"
        },
        {
            id: "A01a",
            question: "Welche Personen sind am IT Security Prozess beteiligt?",
            answers: [
                { text: "Die Organisationsleitung", correct: true },
                { text: "alle übrigen Mitarbeiter", correct: true },
                {
                    text: "nach ITIL Info-Sec Manager, Service Owner, etc.",
                    correct: false
                },
                { text: "Chef", correct: false },
                {
                    text: "die übrigen Inhaber von Rollen der Informationssicherheit",
                    correct: true
                },
                {
                    text: "IT-Security Beauftragte/Informationssicherheitsbeauftragte",
                    correct: true
                }
            ],
            category: "IT Security Prozess"
        },
        {
            id: "A25a",
            question: "Was muss bei einer Ereignisprotokollierung gemacht werden?",
            answers: [
                { text: "Ereignisprotokolle regelmäßig überprüfen", correct: true },
                {
                    text:
                        "Vorsicht!: Unter Umständen lassen sich Rückschlüsse auf das Arbeitsverhalten von Mitarbeitern machen. Hier sollte der Betriebsrat mit eingeschaltet werden.",
                    correct: true
                },
                {
                    text:
                        "Vorsicht!: Ereignisprotokolle enthalten oft personenbezogene Daten besonders schützen",
                    correct: true
                },
                { text: "Definieren, was protokolliert werden soll", correct: true }
            ],
            category: "Ereignisprotokollierung"
        },
        {
            id: "A22j",
            question:
                "Im Bereich Zugang und Zugriff benötigen welche Bereiche besondere Achtsamkeit/Aufmerksamkeit)?",
            answers: [
                {
                    text: "Privilegierte Benutzer; wie System- oder Tool-Administratoren",
                    correct: true
                },
                { text: "alle", correct: false },
                {
                    text:
                        "Der Einsatz von Werkzeugen mit privilegierten Rechten, wie z.B. Netzwerk-Sniffer oder Datenbanktools",
                    correct: true
                }
            ],
            category: "Zugang und Zugriff"
        },
        {
            id: "A21i",
            question:
                "Die ISO 27001 fordert alles Stakeholder zu bestimmen. Wer kann dazu gehören?",
            answers: [
                { text: "Kunden", correct: true },
                { text: "Mitarbeiter/Personal", correct: true },
                { text: "Öffentlichkeit", correct: true },
                { text: "Behörden", correct: true }
            ],
            category: "ISO 27001"
        },
        {
            id: "A25i",
            question:
                "Was sollte beim Umgang mit mobilen Geräten aus der Sicht der IT Sicherheit beachtet werden?",
            answers: [
                {
                    text:
                        "Bei Einsatz von Mobilgeräten an öffentlichen Plätzen (z.B. am Flughafen oder in der Bahn) ist besonders auf die Vertraulichkeit zu achten",
                    correct: true
                },
                {
                    text: "Mobilgeräte sollten vor Diebstahl geschützt werden",
                    correct: true
                },
                {
                    text: "Sie sollten in einem Softcover getragen werden",
                    correct: false
                },
                {
                    text:
                        "Mitarbeiter, die Mobilgeräte einsetzen, sollten besonders für die Gefahren des Einsatzes dieser Geräte sensibilisiert werden",
                    correct: true
                }
            ],
            category: "Mobile Sicherheit"
        },
        {
            id: "A13a",
            question: "Was ist beim Anfertigen eines Backups zu beachten?",
            answers: [
                {
                    text: "Grober Sicherheitsverstoß, wenn keines gemacht wird",
                    correct: true
                },
                { text: "Backup Recovery Übungen sind durchzuführen", correct: true },
                {
                    text: "Aufbewahrung an einem anderen Ort/Brandschutzsektor",
                    correct: true
                },
                {
                    text:
                        "Verschlüsseln, um die Daten vor dem Zugriff dritter zu schützen",
                    correct: true
                }
            ],
            category: "Backup"
        },
        {
            id: "A16g",
            question:
                "Nach ISO 27001 haben IT-Sicherheitsziele welche Eigenschaften?",
            answers: [
                { text: "Sie müssen deutsch formuliert sein", correct: false },
                { text: "Sie sind allen bekannt", correct: false },
                { text: "Im Unternehmen bekannt gemacht werden", correct: true },
                { text: "Sollen nach Möglichkeit messbar sein", correct: true }
            ],
            category: "ISO 27001"
        },
        {
            id: "A16b",
            question: "Wie ist die Verbreitung von Werkzeugen für Cyberangriffe?",
            answers: [
                { text: "Gibt es nicht, Fake-News", correct: false },
                {
                    text: "Es sind auch Baukästen im DarkNet, die man kaufen kann",
                    correct: true
                },
                { text: "Vielfach frei verfügbar", correct: true },
                {
                    text:
                        "Teilweise ganz normale Werkzeuge, die auch für die Administration und Überprüfung der eigenen Netze einsetzbar sind",
                    correct: true
                }
            ],
            category: "Cyberangriffe"
        },
        {
            id: "A14d",
            question: "Wie wird der Begriff Verfügbarkeit am besten beschrieben?",
            answers: [
                {
                    text: "Es ist genug Geld für IT-Sicherheit verfügbar",
                    correct: false
                },
                {
                    text: "Ich kann auf alles zugreifen, was ich brauche",
                    correct: false
                },
                { text: "Alles ist verfügbar für die EDV", correct: false },
                {
                    text:
                        "Informationen und Systeme stehen entsprechend den Vereinbarungen (SLA) dem definierten Benutzerkreis zur Verfügung",
                    correct: true
                }
            ],
            category: "Grundbegriffe"
        },
        {
            id: "A21k",
            question:
                "Wo sollte der IT-Sicherheitsbeauftragte am besten innerhalb einer Organisation angesiedelt sein?",
            answers: [
                { text: "Als Stabstelle bei der Organisationsleitung", correct: true },
                { text: "In der IT-Abteilung", correct: false },
                { text: "In der Organisationsabteilung", correct: false }
            ],
            category: "Organisation"
        },
        {
            id: "A25d",
            question:
                "Welche Tätigkeiten sind beim Risikomanagement nach ISO 27001 zwingend zu machen",
            answers: [
                { text: "Risiken bestimmen", correct: true },
                {
                    text: "Die Zertifizierung muss im 4ten Jahr wiederholt werden",
                    correct: false
                },
                { text: "Risiken behandeln", correct: true },
                { text: "Risiken bewerten", correct: true }
            ],
            category: "Risikomanagement"
        },
        {
            id: "A05e",
            question:
                "Welches sind für Sie die am häufigsten vorkommenden Sicherheitsmängel in der IT",
            answers: [
                {
                    text:
                        "Unzureichendes Bewusstsein für Informationssicherheit bei den Mitarbeitern einer Institution",
                    correct: true
                },
                {
                    text: "Fehlendes oder unzureichendes Patch-Management",
                    correct: true
                },
                {
                    text:
                        "Fehlende oder unzureichende Überwachung von Systemen von Netzen (Monitoring)",
                    correct: true
                },
                {
                    text:
                        "Fehlendes oder unzureichendes Veränderungsmanagement (Change Management)",
                    correct: true
                }
            ],
            category: "Sicherheitsmängel"
        },
        {
            id: "A22h",
            question:
                "Welche Maßnahmen zum Schutz vor Schadsoftware müssen ergriffen werden?",
            answers: [
                {
                    text:
                        "Mitarbeiter sollten für das Problem von Schadsoftware angemessen sensibilisiert werden",
                    correct: true
                },
                {
                    text: "Schadsoftware soll jeder Mitarbeiter beseitigen können",
                    correct: false
                },
                {
                    text:
                        "Beseitigte Schadsoftware muss vom Mitarbeiter an die Landesbehörde gemeldet werden",
                    correct: false
                },
                {
                    text:
                        "Bekannte technische Schwachstellen sollten behoben werden (Patch Management)",
                    correct: true
                }
            ],
            category: "Schadsoftware"
        },
        {
            id: "A04f",
            question:
                "Was umfasst bzw. grenzt die IT-Sicherheit von der Informationssicherheit ab?",
            answers: [
                {
                    text:
                        "IT-Security betrachtet technische Aspekte der Informationssicherheit",
                    correct: true
                },
                {
                    text: "Informationssicherheit umfasst die IT-Security",
                    correct: true
                },
                {
                    text:
                        "Informationssicherheit und IT-Sicherheit sind im Wesentlichen identisch",
                    correct: false
                }
            ],
            category: "Grundbegriffe"
        },
        {
            id: "A14b",
            question:
                "Welche Haftung hat ein IT Security Beauftragter in der Praxis?",
            answers: [
                {
                    text:
                        "Eine Haftung kommt auch bei unterlassenen Tätigkeiten/mangelhafter Aufgabenerfüllung in Frage",
                    correct: true
                },
                {
                    text:
                        "Sowohl ein interner als auch ein externer Informationssicherheitsbeauftragter haftet dem Unternehmen gegenüber grundsätzlich für Schäden, die er schuldhaft verursacht hat",
                    correct: true
                },
                { text: "Er haftet für den Bilanzverlust", correct: false },
                { text: "Er haftet für Stromausfall", correct: false }
            ],
            category: "Rechtliche Aspekte"
        },
        {
            id: "A04b",
            question:
                "Sie haben ein IDS-System, das nur auf einem Computer in Ihrem Netzwerk ausgeführt wird. Um welche Art von IDS-System handelt es sich?",
            answers: [
                { text: "Aktives System", correct: false },
                { text: "Netzwerk System", correct: false },
                { text: "Host-System", correct: true },
                { text: "Ungewöhnliches System", correct: false }
            ],
            category: "Netzwerksicherheit"
        },
        {
            id: "A26d",
            question: "Welche Rollen gehören zur Notfallvorsorge?",
            answers: [
                { text: "Notfallbeauftragter", correct: true },
                { text: "Notfallkoordinator", correct: true },
                { text: "Unternehmensleitung", correct: true },
                { text: "Notfallvorsorgeteam", correct: true }
            ],
            category: "Notfallmanagement"
        },
        {
            id: "A22b",
            question:
                "Welche Voraussetzungen sind zur Behandlung von Informationssicherheitsvorfällen wichtig?",
            answers: [
                {
                    text:
                        "Mitarbeiter in der Lage sind, Informationssicherheitsvorfälle zu erkennen und wissen, wo sie diese melden müssen",
                    correct: true
                },
                {
                    text:
                        "Anlaufstellen für die Informationssicherheitsvorfälle eingerichtet und im Unternehmen bekannt sind",
                    correct: true
                },
                {
                    text: "Prozesse für die Reaktion der Organisation definiert sind",
                    correct: true
                },
                {
                    text:
                        "Verfahren für den Umgang mit forensischen Beweismitteln festgelegt sind",
                    correct: true
                }
            ],
            category: "Incident Management"
        },
        {
            id: "A03d",
            question: "Was bezeichnet die „MTA“ im Rahmen des Notfallmanagements?",
            answers: [
                { text: "Medizinisch technische Assistentin", correct: false },
                { text: "Minimum technical accountable", correct: false },
                {
                    text:
                        "Dieser Wert gibt an, wann ein Prozess spätestens wieder anlaufen muss, damit die Überlebensfähigkeit einer Institution kurz oder langfristig nicht gefährdet ist",
                    correct: true
                }
            ],
            category: "Notfallmanagement"
        },
        {
            id: "A07c",
            question:
                "Für wen gilt das am 25.07.2015 in Kraft getretene IT-Sicherheitsgesetz?",
            answers: [
                { text: "Betreiber kritischer Infrastrukturen", correct: true },
                { text: "Betreiber von Webangeboten", correct: false },
                { text: "BSI", correct: false },
                { text: "Telekommunkationsunternehmen", correct: true }
            ],
            category: "Gesetzliche Grundlagen"
        },
        {
            id: "A02a",
            question: "Welche Personen sind am IT Security Prozess beteiligt?",
            answers: [
                { text: "Die Organisationsleitung", correct: true },
                {
                    text: "Nach ITIL Info-Sec Manager, Service Owner, etc.",
                    correct: false
                },
                {
                    text: "Die übrigen Inhaber von Rollen der Informationssicherheit",
                    correct: true
                },
                { text: "Alle übrigen Mitarbeiter", correct: true },
                {
                    text: "IT-Security Beauftragte/Informationssicherheitsbeauftragte",
                    correct: true
                },
                { text: "Chef", correct: false }
            ],
            category: "IT Security Prozess"
        },
        {
            id: "A03i",
            question:
                "Die Verkabelung des Netzwerkes muss durch einen Raum geführt werden, indem es zu starken Interferenzstörungen kommen kann. Welche der folgenden Kabeltypen bietet den größten Schutz gegen diese Strahlungen?",
            answers: [
                {
                    text:
                        "Abgeschirmte Kabel (S/STP) (Screened Shield-Twisted-Pair)-Kabel",
                    correct: true
                },
                { text: "Coaxial", correct: false },
                { text: "UTP unshielded twisted pair", correct: false }
            ],
            category: "Physische Sicherheit"
        },
        {
            id: "S12a",
            question: "Welche Maßnahmen gehören zum Patch-Management?",
            answers: [
                {
                    text: "Regelmäßige Überprüfung auf verfügbare Updates",
                    correct: true
                },
                {
                    text:
                        "Testen der Updates vor dem Einspielen in der Produktivumgebung",
                    correct: true
                },
                { text: "Dokumentation der eingespielten Updates", correct: true },
                {
                    text: "Erstellen von Datensicherungen vor dem Einspielen von Updates",
                    correct: true
                }
            ],
            category: "Patch-Management"
        },
        {
            id: "P01d",
            question: "Was sind typische Angriffsszenarien im Internet?",
            answers: [
                { text: "Phishing", correct: true },
                { text: "DDoS-Angriffe", correct: true },
                { text: "SQL-Injection", correct: true },
                { text: "Remote-Support", correct: false }
            ],
            category: "Angriffsszenarien"
        },
        {
            id: "D07g",
            question:
                "Welche Anforderungen muss ein Passwort nach den gängigen Sicherheitsrichtlinien erfüllen?",
            answers: [
                { text: "Mindestens 8 Zeichen", correct: true },
                { text: "Kombination aus Groß- und Kleinbuchstaben", correct: true },
                { text: "Sonderzeichen und Zahlen", correct: true },
                { text: "Es sollte leicht zu merken sein", correct: false }
            ],
            category: "Passwörter"
        },
        {
            id: "N05h",
            question: "Was ist unter dem Begriff 'Social Engineering' zu verstehen?",
            answers: [
                {
                    text:
                        "Manipulation von Menschen, um an vertrauliche Informationen zu gelangen",
                    correct: true
                },
                { text: "Einsatz von sozialen Medien zur Überwachung", correct: false },
                { text: "Optimierung von sozialen Netzwerken", correct: false },
                {
                    text:
                        "Ausnutzen menschlicher Eigenschaften wie Hilfsbereitschaft oder Vertrauen",
                    correct: true
                }
            ],
            category: "Social Engineering"
        },
        {
            id: "E09i",
            question:
                "Was sollte bei der Einrichtung einer sicheren E-Mail-Kommunikation beachtet werden?",
            answers: [
                {
                    text: "Verschlüsselung der E-Mails mittels S/MIME oder PGP",
                    correct: true
                },
                { text: "Regelmäßige Überprüfung der Spam-Filter", correct: true },
                { text: "Verzicht auf HTML-Formatierung", correct: false },
                { text: "Absenderprüfung durch SPF, DKIM und DMARC", correct: true }
            ],
            category: "E-Mail-Sicherheit"
        },
        {
            id: "M02j",
            question:
                "Welche Maßnahmen gehören zu einem sicheren Umgang mit mobilen Geräten?",
            answers: [
                { text: "Verwendung von Bildschirmsperren", correct: true },
                { text: "Regelmäßige Software-Updates", correct: true },
                { text: "Verzicht auf öffentliche WLAN-Netzwerke", correct: false },
                { text: "Verschlüsselung des Speichers", correct: true }
            ],
            category: "Mobile Sicherheit"
        },
        {
            id: "C11k",
            question: "Was ist ein Intrusion Detection System (IDS)?",
            answers: [
                {
                    text: "Ein System zur Erkennung von Eindringen in Netzwerke",
                    correct: true
                },
                { text: "Eine Firewall zum Blockieren von Angriffen", correct: false },
                {
                    text:
                        "Ein System zur Überwachung von Netzwerkverkehr auf verdächtige Aktivitäten",
                    correct: true
                },
                { text: "Ein Antivirus-Programm", correct: false }
            ],
            category: "Netzwerksicherheit"
        },
        {
            id: "V04l",
            question: "Was sind Merkmale einer Zwei-Faktor-Authentifizierung?",
            answers: [
                { text: "Kombination aus Wissen und Besitz", correct: true },
                {
                    text: "Verwendung von zwei verschiedenen Passwörtern",
                    correct: false
                },
                {
                    text: "Biometrische Merkmale können als zweiter Faktor dienen",
                    correct: true
                },
                {
                    text:
                        "Erhöhung der Sicherheit durch zusätzliche Authentifizierungsebene",
                    correct: true
                }
            ],
            category: "Authentifizierung"
        },
        {
            id: "R08m",
            question: "Welche Maßnahmen sind Teil eines wirksamen Risikomanagements?",
            answers: [
                { text: "Identifikation von Risiken", correct: true },
                { text: "Bewertung von Risiken", correct: true },
                { text: "Vermeidung aller Risiken", correct: false },
                { text: "Implementierung von Gegenmaßnahmen", correct: true }
            ],
            category: "Risikomanagement"
        },
        {
            id: "D10n",
            question: "Was sind wichtige Aspekte des Datenschutzes in Unternehmen?",
            answers: [
                { text: "Einhaltung der DSGVO", correct: true },
                { text: "Regelmäßige Schulungen der Mitarbeiter", correct: true },
                { text: "Dokumentation aller Verarbeitungstätigkeiten", correct: true },
                {
                    text: "Speicherung aller Daten für mindestens 10 Jahre",
                    correct: false
                }
            ],
            category: "Datenschutz"
        },
        {
            id: "B06o",
            question: "Was sind Bestandteile eines Business Continuity Plans?",
            answers: [
                { text: "Notfallpläne", correct: true },
                { text: "Wiederanlaufpläne", correct: true },
                { text: "Marketingstrategien", correct: false },
                { text: "Kommunikationskonzepte für den Krisenfall", correct: true }
            ],
            category: "Business Continuity"
        },
        {
            id: "V15p",
            question:
                "Welche Sicherheitsmaßnahmen sollten bei der Nutzung von Cloud-Diensten beachtet werden?",
            answers: [
                {
                    text: "Starke Authentifizierung für alle Cloud-Zugänge",
                    correct: true
                },
                {
                    text: "Verschlüsselung sensibler Daten vor dem Upload",
                    correct: true
                },
                { text: "Regelmäßige Überprüfung der Zugriffsrechte", correct: true },
                {
                    text: "Nutzung ausschließlich kostenloser Cloud-Dienste",
                    correct: false
                }
            ],
            category: "Cloud-Sicherheit"
        }
    ];

    // Variablen für den Quiz-Status
    let currentScreen = "startscreen";
    let currentPracticeQuestion = null;
    let practiceHistory = [];
    let currentExamQuestion = 0;
    let examQuestions = [];
    let examAnswers = [];
    let timerInterval = null;
    let timeLeft = 60 * 60; // 60 Minuten in Sekunden

    // Statistik-Variablen
    let statistics = loadStatistics() || {
        answeredQuestions: {},
        totalAnswered: 0,
        totalCorrect: 0,
        totalIncorrect: 0
    };

    // MDL-Komponenten nach der Initialisierung aktualisieren
    function upgradeComponents() {
        if (window.componentHandler) {
            componentHandler.upgradeAllRegistered();
        }
    }

    // DOM-Elemente
    const screens = document.querySelectorAll(".screen");
    const practiceQuestionContainer = document.getElementById(
        "practice-question-container"
    );
    const examQuestionContainer = document.getElementById(
        "exam-question-container"
    );
    const questionNumberElement = document.getElementById("question-number");
    const timeLeftElement = document.getElementById("time-left");
    const catalogContainer = document.getElementById("catalog-container");
    const overviewContainer = document.getElementById("overview-container");
    const scoreElement = document.getElementById("score");
    const percentageElement = document.getElementById("percentage");
    const passFailElement = document.getElementById("pass-fail");

    // Statistik-DOM-Elemente
    const totalQuestionsElement = document.getElementById("total-questions");
    const correctAnswersElement = document.getElementById("correct-answers");
    const incorrectAnswersElement = document.getElementById("incorrect-answers");
    const correctPercentageElement = document.getElementById(
        "correct-percentage"
    );
    const incorrectPercentageElement = document.getElementById(
        "incorrect-percentage"
    );
    const incorrectQuestionsListElement = document.getElementById(
        "incorrect-questions-list"
    );
    const allQuestionsStatsElement = document.getElementById(
        "all-questions-stats"
    );
    const notAnsweredQuestionsListElement = document.getElementById(
        "not-answered-questions-list"
    );
    const practiceIncorrectButton = document.getElementById("practice-incorrect");
    const practiceNotAnsweredButton = document.getElementById(
        "practice-not-answered"
    );
    const catalogSearchInput = document.getElementById("catalog-search");
    const overviewSearchInput = document.getElementById("overview-search");

    // Hilfsfunktionen
    function showScreen(screenId) {
        screens.forEach((screen) => screen.classList.remove("active"));
        document.getElementById(screenId).classList.add("active");
        currentScreen = screenId;

        if (screenId === "statistics") {
            updateStatisticsDisplay();
        }

        upgradeComponents();
    }

    function getRandomQuestion(filteredQuestions = null) {
        const questionPool = filteredQuestions || questions;
        return questionPool[Math.floor(Math.random() * questionPool.length)];
    }

    function generateQuestionHTML(question, mode) {
        if (!question) return '<div class="question">Keine Frage verfügbar</div>';

        let html = `<div class="question">${
            question.id ? `[${question.id}] ` : ""
        }${question.question}</div><div class="answers">`;
        question.answers.forEach((answer, index) => {
            html += `
            <div class="answer">
                <label for="${mode}-answer-${index}">
                    <input type="checkbox" id="${mode}-answer-${index}" data-correct="${answer.correct}">
                    <span class="answer-text">${answer.text}</span>
                </label>
            </div>`;
        });
        return html + "</div>";
    }

    function checkAnswer(mode) {
        const answers = document.querySelectorAll(
            `#${mode}-question-container .answer`
        );
        let allCorrect = true;

        answers.forEach((answer) => {
            const input = answer.querySelector("input");
            const isChecked = input.checked;
            const isCorrect = input.dataset.correct === "true";

            if (isChecked && isCorrect) {
                answer.classList.add("correct");
            } else if (isChecked && !isCorrect) {
                answer.classList.add("incorrect");
                allCorrect = false;
            } else if (!isChecked && isCorrect) {
                answer.classList.add("incorrect");
                allCorrect = false;
            }
        });

        if (mode === "practice" && currentPracticeQuestion) {
            updateQuestionStatistics(currentPracticeQuestion.id, allCorrect);
        }

        return allCorrect;
    }

    function updateQuestionStatistics(questionId, isCorrect) {
        if (!questionId) return;

        if (!statistics.answeredQuestions[questionId]) {
            statistics.totalAnswered++;
        }

        statistics.answeredQuestions[questionId] = {
            answered: true,
            correct: isCorrect,
            timestamp: Date.now()
        };

        updateOverallStatistics();
        saveStatistics();
    }

    function updateOverallStatistics() {
        let correct = 0;
        let incorrect = 0;

        for (const questionId in statistics.answeredQuestions) {
            if (statistics.answeredQuestions[questionId].correct) {
                correct++;
            } else {
                incorrect++;
            }
        }

        statistics.totalCorrect = correct;
        statistics.totalIncorrect = incorrect;
    }

    function saveStatistics() {
        localStorage.setItem("quizStatistics", JSON.stringify(statistics));
    }

    function loadStatistics() {
        const savedStats = localStorage.getItem("quizStatistics");
        return savedStats ? JSON.parse(savedStats) : null;
    }

    function resetStatistics() {
        statistics = {
            answeredQuestions: {},
            totalAnswered: 0,
            totalCorrect: 0,
            totalIncorrect: 0
        };
        saveStatistics();
        updateStatisticsDisplay();
    }

    function updateStatisticsDisplay() {
        totalQuestionsElement.textContent = questions.length;
        correctAnswersElement.textContent = statistics.totalCorrect;
        incorrectAnswersElement.textContent = statistics.totalIncorrect;

        const correctPercentage =
            statistics.totalAnswered > 0
                ? Math.round((statistics.totalCorrect / statistics.totalAnswered) * 100)
                : 0;
        const incorrectPercentage =
            statistics.totalAnswered > 0
                ? Math.round(
                    (statistics.totalIncorrect / statistics.totalAnswered) * 100
                )
                : 0;

        correctPercentageElement.textContent = `(${correctPercentage}%)`;
        incorrectPercentageElement.textContent = `(${incorrectPercentage}%)`;

        incorrectQuestionsListElement.innerHTML = "";
        let hasIncorrectQuestions = false;

        questions.forEach((question) => {
            const stat = statistics.answeredQuestions[question.id];
            if (stat && !stat.correct) {
                hasIncorrectQuestions = true;
                const item = document.createElement("div");
                item.className = "stat-question-item";
                item.innerHTML = `
                    <span class="stat-question-id">${question.id}</span>
                    <span class="stat-question-text">${question.question}</span>
                    <span class="stat-question-status incorrect">
                        <i class="material-icons">close</i>
                    </span>
                `;

                item.addEventListener("click", () => {
                    currentPracticeQuestion = question;
                    practiceQuestionContainer.innerHTML = generateQuestionHTML(
                        question,
                        "practice"
                    );
                    showScreen("practice-mode");
                });

                incorrectQuestionsListElement.appendChild(item);
            }
        });

        if (!hasIncorrectQuestions) {
            incorrectQuestionsListElement.innerHTML =
                '<p class="empty-list-message">Keine falsch beantworteten Fragen vorhanden.</p>';
            practiceIncorrectButton.disabled = true;
        } else {
            practiceIncorrectButton.disabled = false;
        }

        allQuestionsStatsElement.innerHTML = "";

        questions.forEach((question) => {
            const stat = statistics.answeredQuestions[question.id];
            const item = document.createElement("div");
            item.className = "stat-question-item";

            let statusIcon, statusClass, statusText;

            if (!stat) {
                statusIcon = "help_outline";
                statusClass = "not-answered";
                statusText = "Nicht beantwortet";
            } else if (stat.correct) {
                statusIcon = "check";
                statusClass = "correct";
                statusText = "Richtig";
            } else {
                statusIcon = "close";
                statusClass = "incorrect";
                statusText = "Falsch";
            }

            item.innerHTML = `
                <span class="stat-question-id">${question.id || "N/A"}</span>
                <span class="stat-question-text">${question.question}</span>
                <span class="stat-question-status ${statusClass}" title="${statusText}">
                    <i class="material-icons">${statusIcon}</i>
                </span>
            `;

            item.addEventListener("click", () => {
                currentPracticeQuestion = question;
                practiceQuestionContainer.innerHTML = generateQuestionHTML(
                    question,
                    "practice"
                );
                showScreen("practice-mode");
            });

            allQuestionsStatsElement.appendChild(item);
        });

        notAnsweredQuestionsListElement.innerHTML = "";
        let hasNotAnsweredQuestions = false;

        questions.forEach((question) => {
            const stat = statistics.answeredQuestions[question.id];
            if (!stat) {
                hasNotAnsweredQuestions = true;
                const item = document.createElement("div");
                item.className = "stat-question-item";
                item.innerHTML = `
                    <span class="stat-question-id">${
                    question.id || "N/A"
                }</span>
                    <span class="stat-question-text">${question.question}</span>
                    <span class="stat-question-status not-answered">
                        <i class="material-icons">help_outline</i>
                    </span>
                `;

                item.addEventListener("click", () => {
                    currentPracticeQuestion = question;
                    practiceQuestionContainer.innerHTML = generateQuestionHTML(
                        question,
                        "practice"
                    );
                    showScreen("practice-mode");
                });

                notAnsweredQuestionsListElement.appendChild(item);
            }
        });

        if (!hasNotAnsweredQuestions) {
            notAnsweredQuestionsListElement.innerHTML =
                '<p class="empty-list-message">Alle Fragen wurden bereits beantwortet.</p>';
            practiceNotAnsweredButton.disabled = true;
        } else {
            practiceNotAnsweredButton.disabled = false;
        }

        upgradeComponents();
    }

    function loadPracticeQuestion(specificQuestion = null) {
        if (currentPracticeQuestion && !specificQuestion) {
            practiceHistory.push(currentPracticeQuestion);
        }

        if (specificQuestion) {
            currentPracticeQuestion = specificQuestion;
        } else {
            currentPracticeQuestion = getRandomQuestion();
        }

        practiceQuestionContainer.innerHTML = generateQuestionHTML(
            currentPracticeQuestion,
            "practice"
        );
        upgradeComponents();
    }

    function loadPreviousPracticeQuestion() {
        if (practiceHistory.length > 0) {
            currentPracticeQuestion = practiceHistory.pop();
            practiceQuestionContainer.innerHTML = generateQuestionHTML(
                currentPracticeQuestion,
                "practice"
            );
            upgradeComponents();
        } else {
            showSnackbar("Keine vorherige Frage verfügbar!");
        }
    }

    function showSnackbar(message) {
        let snackbarContainer = document.querySelector(".mdl-snackbar");

        if (!snackbarContainer) {
            snackbarContainer = document.createElement("div");
            snackbarContainer.className = "mdl-js-snackbar mdl-snackbar";
            snackbarContainer.innerHTML = `
                <div class="mdl-snackbar__text"></div>
                <button class="mdl-snackbar__action" type="button"></button>
            `;
            document.body.appendChild(snackbarContainer);
            upgradeComponents();
        }

        const data = {
            message: message,
            timeout: 2000
        };

        if (snackbarContainer.MaterialSnackbar) {
            snackbarContainer.MaterialSnackbar.showSnackbar(data);
        } else {
            alert(message);
        }
    }

    function startExam() {
        examQuestions = [...questions].sort(() => 0.5 - Math.random()).slice(0, 50);
        examAnswers = Array(50).fill(null);
        currentExamQuestion = 0;
        loadExamQuestion();

        timeLeft = 60 * 60;
        updateTimer();
        if (timerInterval) clearInterval(timerInterval);
        timerInterval = setInterval(updateTimer, 1000);
    }

    function loadExamQuestion() {
        questionNumberElement.textContent = `Frage ${currentExamQuestion + 1}/50`;
        examQuestionContainer.innerHTML = generateQuestionHTML(
            examQuestions[currentExamQuestion],
            "exam"
        );
        restoreExamAnswers();
        upgradeComponents();
    }

    function updateTimer() {
        const minutes = Math.floor(timeLeft / 60);
        const seconds = timeLeft % 60;
        timeLeftElement.textContent = `${minutes
            .toString()
            .padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;

        if (timeLeft <= 0) {
            clearInterval(timerInterval);
            submitExam();
        } else {
            timeLeft--;
        }
    }

    function saveExamAnswers() {
        const answers = document.querySelectorAll(
            "#exam-question-container .answer input"
        );
        examAnswers[currentExamQuestion] = Array.from(answers).map(
            (input) => input.checked
        );
    }

    function restoreExamAnswers() {
        if (examAnswers[currentExamQuestion]) {
            const answers = document.querySelectorAll(
                "#exam-question-container .answer input"
            );
            answers.forEach((input, index) => {
                input.checked = examAnswers[currentExamQuestion][index];
            });
        }
    }

    function submitExam() {
        clearInterval(timerInterval);
        saveExamAnswers();

        let correctAnswers = 0;
        let examResults = [];

        examQuestions.forEach((question, questionIndex) => {
            let questionCorrect = true;

            if (!examAnswers[questionIndex]) {
                questionCorrect = false;
            } else {
                question.answers.forEach((answer, answerIndex) => {
                    const isChecked = examAnswers[questionIndex][answerIndex];
                    const isCorrect = answer.correct;

                    if ((isChecked && !isCorrect) || (!isChecked && isCorrect)) {
                        questionCorrect = false;
                    }
                });
            }

            if (questionCorrect) {
                correctAnswers++;
            }

            examResults.push({
                question,
                answers:
                    examAnswers[questionIndex] ||
                    Array(question.answers.length).fill(false),
                correct: questionCorrect
            });
        });

        const percentage = Math.round((correctAnswers / 50) * 100);

        scoreElement.textContent = correctAnswers;
        percentageElement.textContent = percentage;

        if (percentage >= 70) {
            passFailElement.textContent = "Bestanden!";
            passFailElement.className = "pass";
        } else {
            passFailElement.textContent = "Nicht bestanden";
            passFailElement.className = "fail";
        }

        const examReviewContainer = document.getElementById(
            "exam-questions-review"
        );
        examReviewContainer.innerHTML = "";

        examResults.forEach((result, index) => {
            const questionDiv = document.createElement("div");
            questionDiv.className = `exam-review-question ${
                result.correct ? "correct" : "incorrect"
            }`;

            const questionHeader = document.createElement("div");
            questionHeader.className = "exam-question-header";
            questionHeader.innerHTML = `
                <span class="exam-question-number">Frage ${index + 1}</span>
                <span class="exam-question-result ${
                result.correct ? "correct" : "incorrect"
            }">
                    ${result.correct ? "Richtig" : "Falsch"}
                </span>
            `;

            const questionText = document.createElement("div");
            questionText.className = "exam-question-text";
            questionText.textContent = result.question.question;

            const answersDiv = document.createElement("div");
            answersDiv.className = "exam-answers";

            result.question.answers.forEach((answer, answerIndex) => {
                const answerDiv = document.createElement("div");
                const isChecked = result.answers[answerIndex];

                if (answer.correct && isChecked) {
                    answerDiv.className = "exam-answer correct";
                } else if (!answer.correct && isChecked) {
                    answerDiv.className = "exam-answer incorrect";
                } else if (answer.correct && !isChecked) {
                    answerDiv.className = "exam-answer missed";
                } else {
                    answerDiv.className = "exam-answer";
                }

                answerDiv.innerHTML = `
                    <span class="exam-answer-marker">
                        ${isChecked ? "☑" : "☐"} 
                        ${
                    answer.correct
                        ? '<i class="material-icons tiny">check</i>'
                        : ""
                }
                    </span>
                    <span class="exam-answer-text">${answer.text}</span>
                `;

                answersDiv.appendChild(answerDiv);
            });

            questionDiv.appendChild(questionHeader);
            questionDiv.appendChild(questionText);
            questionDiv.appendChild(answersDiv);
            examReviewContainer.appendChild(questionDiv);
        });

        showScreen("results");
    }

    function createCatalog() {
        catalogContainer.innerHTML = "";

        const searchTerm = catalogSearchInput.value.toLowerCase();
        const filteredQuestions = searchTerm
            ? questions.filter(
                (q) =>
                    (q.id && q.id.toLowerCase().includes(searchTerm)) ||
                    q.question.toLowerCase().includes(searchTerm) ||
                    (q.category && q.category.toLowerCase().includes(searchTerm))
            )
            : questions;

        const categoriesMap = {};
        filteredQuestions.forEach((question) => {
            const category = question.category || "Allgemein";
            if (!categoriesMap[category]) {
                categoriesMap[category] = [];
            }
            categoriesMap[category].push(question);
        });

        Object.keys(categoriesMap)
            .sort()
            .forEach((category) => {
                const categoryHeader = document.createElement("div");
                categoryHeader.className = "catalog-item category";
                categoryHeader.textContent = category;
                catalogContainer.appendChild(categoryHeader);

                categoriesMap[category].forEach((question, index) => {
                    const catalogItem = document.createElement("div");
                    const stat = statistics.answeredQuestions[question.id];

                    catalogItem.className = "catalog-item";
                    if (stat) {
                        catalogItem.className += stat.correct
                            ? " answered-correct"
                            : " answered-incorrect";
                    }

                    catalogItem.textContent = `${question.id || `Frage ${index + 1}`}`;
                    catalogItem.addEventListener("click", () => {
                        currentPracticeQuestion = question;
                        practiceQuestionContainer.innerHTML = generateQuestionHTML(
                            question,
                            "practice"
                        );
                        showScreen("practice-mode");
                    });

                    catalogContainer.appendChild(catalogItem);
                });
            });

        upgradeComponents();
    }

    function createOverview() {
        overviewContainer.innerHTML = "";

        const searchTerm = overviewSearchInput.value.toLowerCase();
        const filteredQuestions = searchTerm
            ? questions.filter(
                (q) =>
                    (q.id && q.id.toLowerCase().includes(searchTerm)) ||
                    q.question.toLowerCase().includes(searchTerm) ||
                    (q.category && q.category.toLowerCase().includes(searchTerm))
            )
            : questions;

        filteredQuestions.forEach((question) => {
            const overviewItem = document.createElement("div");
            overviewItem.className = "overview-item";

            const questionElement = document.createElement("div");
            questionElement.className = "overview-question";
            questionElement.textContent = `${question.id ? question.id + ": " : ""}${
                question.question
            }`;

            overviewItem.appendChild(questionElement);
            question.answers.forEach((answer) => {
                const answerElement = document.createElement("div");
                answerElement.className = answer.correct
                    ? "overview-answer correct"
                    : "overview-answer incorrect";
                answerElement.textContent = answer.text;

                overviewItem.appendChild(answerElement);
            });

            overviewContainer.appendChild(overviewItem);
        });

        upgradeComponents();
    }

    function getIncorrectQuestions() {
        return questions.filter((q) => {
            const stat = statistics.answeredQuestions[q.id];
            return stat && !stat.correct;
        });
    }

    function getNotAnsweredQuestions() {
        return questions.filter((q) => !statistics.answeredQuestions[q.id]);
    }

    // Event-Listener definieren
    function setupEventListeners() {
        document.getElementById("practice-btn").addEventListener("click", () => {
            loadPracticeQuestion();
            showScreen("practice-mode");
        });

        document.getElementById("exam-btn").addEventListener("click", () => {
            startExam();
            showScreen("exam-mode");
        });

        document.getElementById("catalog-btn").addEventListener("click", () => {
            createCatalog();
            showScreen("catalog");
        });

        document.getElementById("overview-btn").addEventListener("click", () => {
            createOverview();
            showScreen("overview");
        });

        document.getElementById("stats-btn").addEventListener("click", () => {
            showScreen("statistics");
        });

        document
            .getElementById("next-question-practice")
            .addEventListener("click", () => {
                loadPracticeQuestion();
            });

        document
            .getElementById("check-answer-practice")
            .addEventListener("click", () => {
                checkAnswer("practice");
            });

        document
            .getElementById("prev-question-practice")
            .addEventListener("click", () => {
                loadPreviousPracticeQuestion();
            });

        document.getElementById("home-practice").addEventListener("click", () => {
            showScreen("startscreen");
        });

        document
            .getElementById("catalog-practice")
            .addEventListener("click", () => {
                createCatalog();
                showScreen("catalog");
            });

        document
            .getElementById("next-question-exam")
            .addEventListener("click", () => {
                saveExamAnswers();
                if (currentExamQuestion < 49) {
                    currentExamQuestion++;
                    loadExamQuestion();
                }
            });

        document
            .getElementById("prev-question-exam")
            .addEventListener("click", () => {
                saveExamAnswers();
                if (currentExamQuestion > 0) {
                    currentExamQuestion--;
                    loadExamQuestion();
                }
            });

        document.getElementById("home-exam").addEventListener("click", () => {
            if (
                confirm(
                    "Möchten Sie die Prüfung wirklich abbrechen? Ihr Fortschritt geht verloren."
                )
            ) {
                clearInterval(timerInterval);
                showScreen("startscreen");
            }
        });

        document.getElementById("catalog-exam").addEventListener("click", () => {
            saveExamAnswers();
            createCatalog();
            showScreen("catalog");
        });

        document.getElementById("submit-exam").addEventListener("click", () => {
            if (confirm("Möchten Sie die Prüfung wirklich abgeben?")) {
                submitExam();
            }
        });

        document.getElementById("home-catalog").addEventListener("click", () => {
            showScreen("startscreen");
        });

        document.getElementById("home-overview").addEventListener("click", () => {
            showScreen("startscreen");
        });

        document
            .getElementById("catalog-overview")
            .addEventListener("click", () => {
                createCatalog();
                showScreen("catalog");
            });

        document.getElementById("home-results").addEventListener("click", () => {
            showScreen("startscreen");
        });

        document.getElementById("home-stats").addEventListener("click", () => {
            showScreen("startscreen");
        });

        document
            .getElementById("practice-incorrect")
            .addEventListener("click", () => {
                const incorrectQuestions = getIncorrectQuestions();
                if (incorrectQuestions.length > 0) {
                    loadPracticeQuestion(getRandomQuestion(incorrectQuestions));
                    showScreen("practice-mode");
                } else {
                    showSnackbar("Keine falsch beantworteten Fragen vorhanden!");
                }
            });

        document
            .getElementById("practice-not-answered")
            .addEventListener("click", () => {
                const notAnsweredQuestions = getNotAnsweredQuestions();
                if (notAnsweredQuestions.length > 0) {
                    loadPracticeQuestion(getRandomQuestion(notAnsweredQuestions));
                    showScreen("practice-mode");
                } else {
                    showSnackbar("Alle Fragen wurden bereits beantwortet!");
                }
            });

        document.getElementById("retry-exam").addEventListener("click", () => {
            startExam();
            showScreen("exam-mode");
        });

        document.getElementById("review-answers").addEventListener("click", () => {
            document
                .getElementById("exam-review-container")
                .scrollIntoView({ behavior: "smooth" });
        });

        catalogSearchInput.addEventListener("input", () => {
            createCatalog();
        });

        overviewSearchInput.addEventListener("input", () => {
            createOverview();
        });

        document.getElementById("main-menu-home").addEventListener("click", () => {
            showScreen("startscreen");
        });

        document
            .getElementById("main-menu-practice")
            .addEventListener("click", () => {
                loadPracticeQuestion();
                showScreen("practice-mode");
            });

        document.getElementById("main-menu-exam").addEventListener("click", () => {
            startExam();
            showScreen("exam-mode");
        });

        document.getElementById("main-menu-stats").addEventListener("click", () => {
            showScreen("statistics");
        });

        document.getElementById("drawer-home").addEventListener("click", () => {
            showScreen("startscreen");
        });

        document.getElementById("drawer-practice").addEventListener("click", () => {
            loadPracticeQuestion();
            showScreen("practice-mode");
        });

        document.getElementById("drawer-exam").addEventListener("click", () => {
            startExam();
            showScreen("exam-mode");
        });

        document.getElementById("drawer-catalog").addEventListener("click", () => {
            createCatalog();
            showScreen("catalog");
        });

        document.getElementById("drawer-overview").addEventListener("click", () => {
            createOverview();
            showScreen("overview");
        });

        document.getElementById("drawer-stats").addEventListener("click", () => {
            showScreen("statistics");
        });
    }

    // Initialisieren
    setupEventListeners();
    updateStatisticsDisplay();
    upgradeComponents();
});
